سري - منصة إدارة هاكثون البيئة - Ruman
________________


  سري
[1]مواصفات متطلبات البرمجيات (Software Requirements Specification)
* مسودة الفكرة
1. فكرة النظام هو لإدارة هاكاثون عن البيئة مقام في مدينة بريدة تحت إشراف فرع وزارة الزراعة السعودية وإمارة منطقة القصيم.
2. نظام الهاكاثون عبارة عن موقع ويب ذو صفحة هبوط وصفحة للحديث عن الهاكاثون وصفحة للجوائز وصفحة لاستعراض الورش والندوات والمحاضرات التي تقام خلال فترة الهاكاثون وصفحة توضيح مسارات الهاكاثون.
3. النظام يسمح للمستخدم بالتسجيل إما كقائد فريق أو عضو فريق، وقائد الفريق بعد التسجيل يقوم برفع الفكرة التي يريد المشاركة بها ضمن أحد مسارات الهاكاثون.
4. التسجيل في الموقع والرفع الأفكار مربوط بوقت معين بعد انتهاء الوقت يقفل التسجيل ويقفل رفع الأفكار.
5. الهاكثون له نسخة كل سنة وكل سنة يختلف تاريخ فتح التسجيل وإغلاقه.
6. بعد رفع الفكرة من قبل قائد الفريق تذهب إلى صلاحية المشرف على المسار بحيث يدرس الفكرة ويقيمها ويقبلها أو يرفضها.
7. بعد قبول أو رفض الفكرة تصل رسالة ايميل لقائد الفريق بذلك، وتظهر له النتيجة عند تسجيل الدخول سواء من قبله أو قبل أحد أعضاء الفريق حيث لكل عضو فريق إما أن يقوم بالتسجيل واختيار الفريق أو يضاف من قبل قائد الفريق.
8. بعد التسجيل من قبل عضو الفريق واختيار أحد الفرق يأتي إشعار لقائد الفريق بالسماح له بالانضمام أم لا إن لم يكن هو من قام بإضافته بنفسه.
9. المشرف على المسار له إمكانية قبول/ رفض/ أو بحاجة لتعديل للفكرة بحيث يطلب رفع ملفات أكثر أو يطلب زيادة تفاصل أو أي ملاحظة من قبل قائد الفريق وتظهر للفريق كامل ملاحظات المشرف.
10. عند قبول الفكرة من قبل المشرف تظهر إمكانية إرسال إشعار من قبله للفريق صاحب الفكرة إما بتحديد اجتماع عن بعد أو على أرض الواقع أو إبلاغهم بالخطوة والمتطلبات القادمة.
11. الموقع يحتوي خاصية التسجيل لحضور الندوات أو ورش العمل لأي زائر آخر غير مشارك بالهاكاثون قد يكون مهتم ويريد حضور الدورات أو ورش العمل خلال فترة الهاكثون.
12. عند التسجيل لحضور ندوة أو ورشة يتم طلب الاسم والايميل ورقم الجوال ورقم الهوية/الإقامة، ثم يتم إرسال إيميل تحتوي على باركود لتسجيل الحضور خلال الورشة.
13. النظام يحتوي صلاحية تسجيل حضور للورشة بحيث يتم مسح الباركود من خلال أي جوال للمستخدم ذو الصلاحية ثم يسجل حضور الزائر صاحب الباركود دايركت لحصر الأعداد وغيرها لكل دورة أو ورشة عمل أو المجموع الكلي.
14. الزائر أو قائد الفريق أو عضو الفريق بإمكانهم جميعا التسجيل لحضور أي ورشة أو ندوة.
15. يمكن التسجيل لحضور أكثر من ندوة أو ورشة عمل.
16. يوجد قسم لعرض أخبار الهاكاثون أولاً بأول كمواضع تحتوي صور ونص وعنوان وتاريخ نشر الأخبار ويكون كل خبر يمكن ربطه في حساب تويتر لنشره هناك بشكل تلقائي.
17. النظام متجاوب لكل الأجهزة ويدعم اللغة العربية والإنجليزية ويدعم الدارك مود.
________________


________________


1. المتطلبات التقنية المقترحة (Technical Requirements)
1.1 نظرة عامة على النظام (System Overview)
نظام ويب لإدارة الهاكاثونات تنظمه جهة حكومية، يُستخدم لتسجيل الفرق والأفكار، وإدارة عمليات الفرز، وجدولة الورش، والتواصل مع المشاركين، وحصر الحضور للفعاليات المصاحبة، ودعم أحداث سنوية متعددة.
1.2 التقنيات المقترحة لبناء النظام (Technology Stack)
المكوّن
	التقنية المستخدمة
	سبب الاختيار
	Back-End
	Laravel 12 (PHP) / Wordpress
	سرعة التطوير، Ecosystem قوي، دعم الحماية، سهولة التوسع
	Front-End
	WordPress + Elementor = للموقع العام.
Laravel + Vue 3 + Inertia + TailwindCSS = للنظام الداخلي (app.ruman.sa).
	تجربة SPA سريعة + دعم تعدد اللغات والـ SSR إذا لزم
	Database
	MySQL 8
	استقرار، دعم قوي للفهارس، التوسع الرأسي والأفقي
	Cache / Sessions
	Redis
	تسريع الأداء، تخفيف الضغط على DB
	Web Server
	Nginx
	أداء عالي، دعم PHP-FPM
	Authentication
	JWT
	إدارة تسجيل دخول/تسجيل، التحقق الثنائي 2FA
	Deployment
	Docker Containers
	سهولة النقل بين البيئات، CI/CD
	File Storage
	Local
	رفع الملفات المطلوبة (PDF، PowerPoint، إلخ)
	Notifications
	Email (SMTP) + Optional SMS
	للتنبيه بقبول/رفض الأفكار وتأكيدات التسجيل
	Version Control
	Git + GitHub Actions
	لإدارة الإصدارات والتحديثات الآلية
	Languages
	Arabic (RTL) & English (LTR)
	واجهة ثنائية اللغة


1.3 أمن وحماية النظام (Security Requirements)
تشفير كلمات المرور باستخدام argon2id لأنها أقوى (مدعومة في Laravel).
حماية من:
* SQL Injection, XSS, CSRF (مدمج في Laravel)
* Brute Force على تسجيل الدخول (rate limiting) / ممكن (ThrottleRequests) قاعدة (max 5 محاولات / دقيقة لكل IP.)
* صلاحيات Role-Based Access (Admin – Track Supervisor – Team Leader – Member – Visitor), يفضل استخدام (Spatie Laravel Permission package) إذا كانت أفضل.
* تتبع الإجراءات Audit Trail
* صلاحية رفع الملفات محدودة حسب الدور ونوع الملف (File Validation + Antivirus Scan (ClamAV integration مثلاً) خصوصًا PDF/Word ). ( لكل فكرة 8 ملفات وكل ملف لا يتعدى 15MB)
* إمكانية تفعيل توثيق بخطوتين (OTP عبر SMS أو email) في حال الحاجة لها بمعنى اختيارية للمستخدم (Laravel Fortify أو Google Authenticator integration).


1.4 متطلبات الأداء (Performance Requirements)
* استيعاب حتى 1500 مستخدم متزامن.
* زمن استجابة لواجهة المستخدم ≤ 2 ثانية
* استخدام Redis لتسريع:
   * الجلسات Sessions
   * نتائج الاستعلامات المؤقتة
* استخدام CDN (مثل Cloudflare) للصور والملفات الثابتة إذا لزم. (يستخدم Browser Caching headers)
1.5 متطلبات السيرفر (Server Resources)
البيئة المتوقعة: Production VPS
العنصر
	المواصفات المقترحة
	CPU
	4 vCPU
	RAM
	8 GB
	Storage
	80–100 GB SSD
	OS
	Ubuntu 22.04 LTS
	Network
	1 Gbps Port
	Containerization
	Docker / Docker Compose
	________________


إضافات مهمة:
Backups: يومي للـ DB والملفات من خلال السيرفر.
Monitoring: أداة مثل Laravel Telescope أو Sentry لمتابعة الأخطاء.
Queue System: للمهام الثقيلة (إرسال إيميلات، رفع ملفات، تقارير PDF) حتى ما يأثر على زمن الاستجابة.
DB Indexing: لابد تنحسب من البداية لضمان سرعة queries.
2. المتطلبات الوظيفية[a] (Functional Requirements)
2.1 إدارة المحتوى العام للموقع (Public Pages Management)
* F1: صفحة هبوط تعريفية عن الهاكاثون.      ruman.sa — app.ruman.sa
* F2: صفحة تتحدث عن أهداف الهاكاثون وإشراف الجهات المنظمة.
* F3: صفحة الجوائز والمسارات.
* F4: صفحة لاستعراض جدول الورش/الندوات/المحاضرات.
* F5: صفحة عرض أخبار الهاكاثون وربط التغريد الآلي بتويتر.[b]
2.2 نظام التسجيل والمستخدمين (Authentication & User Management)
* F6: تسجيل الحساب الاسم + الإيميل مع التأكيد + تاريخ الميلاد + رقم الجوال +  رقم الهوية[c][d] + كلمة المرور + المهنة (طالب أو موظف) + المسمى الوظيفي إن وجد
* F7: خيارات التسجيل:
   * كقائد فريق
   * كعضو فريق
   * كزائر عادي لحضور الورش فقط
* F8: تسجيل الدخول وإعادة تعيين كلمة المرور.
2.3 إدارة الفرق والأفكار (Teams & Ideas)
* F9: يسمح لقائد الفريق بإنشاء فريق.
* F10: يسمح لقائد الفريق بدعوة الأعضاء عبر البريد أو رقم الهوية.
* F11: عضو الفريق يستطيع طلب الانضمام إلى فريق ويتلقى القائد إشعارًا للموافقة أو الرفض.
* F12: يستطيع قائد الفريق رفع فكرة المشروع المشارك ضمن مسار محدد.
* F13: الفكرة يكون لها حالة: (قيد المراجعة،  مقبولة، مرفوضة، بحاجة تعديل).
* F14: عند تغيير الحالة من قبل مشرف المسار يصل إشعار وإيميل لقائد الفريق.
* F15: إمكانية طلب تعديلات من الفريق ورفع ملفات إضافية أو تعديل البيانات من قبل المشرف.
* F16: بعد القبول، يمكن للمشرف إرسال إشعارات للفريق (اجتماع، الخطوة القادمة... إلخ).
2.4 إدارة المسارات والمشرفين (Tracks & Supervisors)
* F17: كل مسار له مشرف/مشرفين, والمشرف العام على الهاكاثون يشرف عليهم.
* F18: المشرف يرى فقط الأفكار الخاصة بمساره.
* F19: المشرف يقيم الفكرة ويغير حالتها ويضيف تعليقاته.
* F20: المشرف يمكنه التواصل مع قادة الفرق المقبولة.
2.5 التسجيل في الورش والندوات (Workshops Registration)
* F21: عرض قائمة الورش/الندوات العامة مع تفاصيلها (العنوان، وصف الورشة/ الندوة، التاريخ، اسم المحاضر، الجهة المنظمة، عدد المقاعد)، إمكانية تسجيل متحدثين وجهات مشرفة أو منظمة لكل ورشة ، بحيث تظهر ضمن تفاصيل الورشة أو الندوة وربطهما مع بعض.
* F22: تفعيل التسجيل لأي مستخدم (زائر/قائد/عضو/ مشرف/ مشرف عام).
* F23: إدخال البيانات المطلوبة: الاسم، الهوية، الجوال، الإيميل.
* F24: بعد التسجيل يتم إرسال إيميل يحتوي Barcode مخصص.
* F25: إمكانية التسجيل في أكثر من ورشة.
2.6 تأكيد الحضور (Attendance Tracking)
* F26: مشرف الورشة يستخدم الجوال لمسح الباركود يفضل يكون عن طريق المتصفح.
* F27: عند المسح يتم تسجيل الحضور وتحديث عدد الحضور تلقائيًا.
* F28: عرض تقارير الحضور لكل ورشة، ولكل زائر.
2.7 إدارة الأخبار (News Module)
* F29: إضافة/تعديل/حذف خبر.
* F30: لكل خبر: صورة، عنوان، نص، تاريخ.
* F31: إمكانية نشر تلقائي على منصة X عند إضافة خبر.
2.8 تعدد السنوات ونسخ الهاكاثون (Hackathon Editions)
* F32: إمكانية إنشاء نسخة جديدة للهاكاثون كل سنة.
* F33: لكل نسخة تاريخ بدء وانتهاء التسجيل ورفع الأفكار، وكل سنة يمكن تعيين مشرفين لها وفرق جديدة لها إلى آخره.
* F34: أرشفة البيانات والإحصائيات حسب النسخة السنوية.


3. رحلات المستخدم الأساسية المقترحة (User Journeys)
3.1 رحلة الزائر (Visitor Journey):
يدخل الموقع → يتصفح معلومات الهاكاثون والورش → يفتح صفحة ورشة → يرى (الوصف – المتحدثين – الجهة) → يضغط “سجل الآن” → يُدخل (الاسم – الايميل – الجوال – المنصب الوظيفي) → يستلم باركود على الإيميل → يحضر الورشة → يتم مسح الباركود وتأكيد الحضور.


3.2 رحلة قائد الفريق (Team Leader):
يسجل حساب → يختار “قائد فريق” → ينشئ فريقًا باسم مميز → يدعو الأعضاء باستخدام الإيميل → دايركت نسخة الهاكاثون → ينشئ فكرة المشاركة ويُدخل الوصف ويرفع الملفات → يختار المسار المناسب → يرسل الفكرة للتقييم → يستلم إشعار (قبول / رفض / بحاجة تعديل) → في حال الحاجة لتعديل؛ يعدل الوصف أو الملفات هو أو أحد الأعضاء → يُعاد الإرسال → عند القبول يظهر زر “متابعة التعليمات القادمة” → يتلقى إشعارات المشرف (موعد اجتماع – متطلبات – تحديثات) → يمكنه كذلك التسجيل في الورش مثل الزائر.


3.3 رحلة عضو الفريق (Team Member):
يسجل بحسابه/ أو حساب جديد → يختار “عضو فريق” → ينضم إلى الفريق بدعوة من القائد أو يختار الفريق → يظهر له اسم الفريق ومسار الفكرة → يضغط “تعديل الفكرة” → يستطيع رفع ملفات إضافية أو تعديل الوصف (حسب الصلاحية) → يتم حفظ التعديل في Audit Log باسم العضو وتاريخ التعديل → يُعاد إرسال الفكرة للمشرف → يرى حالة تقييم الفكرة لحظيًا → يستطيع التسجيل في الورش كما يفعل الزائر.
3.4 رحلة مشرف المسار (Track Supervisor):
يسجل دخوله → يفتح لوحة “الأفكار” → يرى قائمة الأفكار الواردة → يفتح فكرة → يستعرض الوصف والملفات → يكتب الملاحظات → يختار (قبول / رفض / بحاجة تعديل) والسكور → يُرسل التقييم → يصل إشعار لقائد الفريق → عند القبول يستطيع إرسال “دعوة اجتماع” أو “متطلبات إضافية” → يتابع تقدم الفرق ضمن مساره.


3.5 رحلة المشرف العام (Hackathon Admin):
يسجل دخوله → يُدخل تواريخ التسجيل ورفع الأفكار → يحدد المسارات → يضيف مشرفين لكل مسار → ينشئ ورش العمل (عنوان – وصف – تاريخ – عدد مقاعد – متحدثين – جهات منظمة) → ينشر الورش في الموقع → يتابع تقارير (عدد الفرق المشاركة - عدد الأعضاء للفرق – عدد الأفكار المقدمة - حالات الأفكار – عدد الورش وعدد حضور الورش وعدد المسجلين للورش) والتقارير تكون على شكل charts وجداول ويمكن تحميلها بصيغة Excel لجميع بياناتها → ينشر أخبارًا ويربطها بالتويتر.


3.6 رحلة مسؤول النظام العام (System Admin):
يدخل لوحة التحكم الرئيسية → ينشئ نسخة هاكاثون سنوية → يُعين Hackathon Admin لكل نسخة → يضبط إعدادات البريد (SMTP) والخدمات الخارجية (SMS – Twitter API) → يدير صلاحيات المستخدمين → يراجع الـ Audit Logs لجميع العمليات → يتحكم في إعدادات الهوية البصرية والتكاملات التقنية للمنصة.
________________


4. تصميم أولي لقاعدة البيانات (ERD Tables)
تصميم مقترح يتم مراجعته مع المبرمج بالكامل، وقت الاجتماع وتحديد جداول البيانات المطلوبة والنظر في اقتراحات المبرمج بالكامل.
4.1 الجداول المقترحة (Database Tables)
Core System
* users – جميع المستخدمين (مشرفين، قادة، أعضاء، زوار…)
* hackathons – نسخ الهاكاثون حسب السنوات
* tracks – مسارات كل نسخة
* teams
* team_members
* ideas
* idea_files
* idea_audit_logs
* notifications – الإشعارات (Email, SMS, In-App)
* settings – إعدادات النظام (SMTP, SMS Gateways, Logo, Colors…)
ورش العمل والجهات والمتحدثون
* workshops
* organizations – الجهات المنظمة للورش (جمعيات، جامعات، شركات…)
* speakers – المتحدثون المرتبطون بالورش
* workshop_organizations (pivot)
* workshop_speakers (pivot)
* workshop_registrations – تسجيل وحضور الورش
الأخبار
* news




4.2 ERD
erDiagram

   users {
     bigint id PK
     string national_id
     string name
     string email
     string phone
     string password
     enum role
     boolean status
     datetime created_at
   }

   hackathons {
     bigint id PK
     string name
     int year
     datetime start_register_at
     datetime end_register_at
     datetime start_idea_at
     datetime end_idea_at
   }

   tracks {
     bigint id PK
     bigint hackathon_id FK
     string name
     text description
   }

   teams {
     bigint id PK
     bigint hackathon_id FK
     string name
     bigint leader_id FK
   }

   team_members {
     bigint id PK
     bigint team_id FK
     bigint user_id FK
     enum join_status
     datetime created_at
   }

   ideas {
     bigint id PK
     bigint team_id FK
     bigint track_id FK
     bigint supervisor_id FK
     string title
     longtext description
     enum status
     datetime created_at
   }

   idea_files {
     bigint id PK
     bigint idea_id FK
     bigint uploaded_by FK
     string file_path
     datetime uploaded_at
   }

   idea_audit_logs {
     bigint id PK
     bigint idea_id FK
     bigint user_id FK
     string action
     text notes
     datetime created_at
   }

   workshops {
     bigint id PK
     bigint hackathon_id FK
     string title
     text description
     datetime date_time
     int seats
   }

   organizations {
     bigint id PK
     string name
     string logo
     text description
   }

   speakers {
     bigint id PK
     string name
     string bio
     string photo
     string position
   }

   workshop_organizations {
     bigint id PK
     bigint workshop_id FK
     bigint organization_id FK
   }

   workshop_speakers {
     bigint id PK
     bigint workshop_id FK
     bigint speaker_id FK
   }

   workshop_registrations {
     bigint id PK
     bigint workshop_id FK
     bigint user_id FK
     string barcode
     boolean attendance
     datetime created_at
   }

   notifications {
     bigint id PK
     bigint user_id FK
     string channel       -- email, sms, app
     string title
     text body
     boolean is_read
     datetime created_at
   }

   settings {
     bigint id PK
     string key
     string value
     datetime created_at
   }

   news {
     bigint id PK
     bigint hackathon_id FK
     string title
     text body
     string images
     boolean tweet_status
     datetime published_at
   }

   %% Relations
   hackathons ||--o{ tracks : ""
   hackathons ||--o{ teams : ""
   hackathons ||--o{ workshops : ""
   tracks ||--o{ ideas : ""
   users ||--o{ teams : "leader"
   users ||--o{ team_members : ""
   users ||--o{ ideas : "supervisor"
   users ||--o{ idea_files : ""
   users ||--o{ workshop_registrations : ""
   users ||--o{ notifications : ""
   teams ||--o{ team_members : ""
   teams ||--o{ ideas : ""
   ideas ||--o{ idea_files : ""
   ideas ||--o{ idea_audit_logs : ""
   workshops ||--o{ workshop_speakers : ""
   workshops ||--o{ workshop_organizations : ""
   workshops ||--o{ workshop_registrations : ""
   organizations ||--o{ workshop_organizations : ""
   speakers ||--o{ workshop_speakers : ""
   hackathons ||--o{ news : ""
	________________


5. سير العمل (WorkFlows):
Workflow 1 – عملية تسجيل فريق ورفع فكرة
1. دخول القائد إلى الموقع.
2. التسجيل بحساب جديد.
3. اختيار نوع المستخدم (قائد فريق).
4. إنشاء فريق → إدخال اسم الفريق.
5. دعوة الأعضاء (إدخال رقم الهوية/الإيميل).
6. اختيار نسخة الهاكاثون من القائمة.
7. الضغط: "إنشاء فكرة".
8. إدخال بيانات الفكرة (العنوان، الوصف، اختيار المسار).
9. رفع الملفات (PowerPoint, PDF ... إلخ).
10. إرسال الفكرة للتقييم → الحالة تصبح (Pending).
11. يستقبل مشرف المسار إشعارًا بوجود فكرة جديدة.
12. المشرف يفتح الفكرة ويختار:
   1. Accept → إشعار قبول يُرسل للقائد.
   2. Reject → إشعار رفض للفريق.
   3. Need Edit → يرسل ملاحظات ويُطلب تعديل.
13. في حالة “Need Edit” يقوم القائد أو عضو الفريق بتعديل الوصف/الملفات.
14. يُعاد إرسالها للمشرف من جديد → تعود الحالة (Pending).
15. عند القبول النهائي → تفتح المرحلة التالية للفريق (اجتماعات، تجهيز العرض… إلخ).


Workflow 2 – انضمام عضو فريق
1. العضو يسجل حساب مستخدم جديد.
2. يختار “عضو فريق”.
3. يُدخل كود الفريق أو يقبل دعوة وصلته على البريد.
4. حالة الانضمام تكون (Pending).
5. قائد الفريق يتلقى إشعارًا ويقرر:
   1. Accept → يصبح عضو فعّال.
   2. Reject → يُرفض الطلب ويصبح بإمكان العضو اختيار فريق آخر.
6. بعد القبول يستطيع العضو تعديل الفكرة أو رفع ملفات.
7. كل تعديل يُسجل في audit log.


Workflow 3 – التسجيل في ورشة عمل
1. الزائر (أو أي نوع مستخدم) يتصفح قائمة الورش.
2. يفتح تفاصيل الورشة.
3. يضغط “سجل الآن”.
4. يُدخل بياناته (الاسم – الهوية – الجوال – البريد).
5. يُنشأ تسجيل بورشة → barcode يُرسل إلى الإيميل.
6. أثناء الورشة، المسؤول يقوم بمسح الباركود عبر الجوال.
7. يتم تحديث attendance = true في النظام.
8. يمكن استخراج تقرير الحضور لاحقًا.


Workflow 4 – إدارة نسخة هاكاثون (Hackathon Admin)
1. مسؤول الهاكاثون يسجل دخول.
2. ينشئ نسخة جديدة للسنة.
3. يُدخل تواريخ التسجيل ورفع الأفكار.
4. يُدخل المسارات ويُعيّن لها المشرفين.
5. ينشئ الورش ويُعيّن المتحدثين والجهات.
6. يتابع عدد الفرق، الأفكار، حالة التقييمات.
7. ينشر أخبار الهاكاثون.
8. عند انتهاء النسخة → أرشفة النسخة وقفل جميع المدخلات.


Workflow 5 – مسؤول النظام (System Admin)
1. إنشاء حسابات لمسؤولي الهاكاثون.
2. ضبط لوحة الإعدادات العامة (SMTP – SMS – الشعار – الألوان).
3. تشغيل أو تعطيل نسخة هامة.
4. مراجعة سجل الإشعارات والأحداث.
5. ضبط صلاحيات Roles للمستخدمين.
________________






________________
[1] النظام لا زال قيد الدراسة ولم يعتمد العمل عليه لحين مراجعة المتطلبات والتقنيات.
[a]نحتاج لمراجعة المتطلبات الوظيفية ومتطلباتها قبل بدء العمل في برمجة النظام
[b]لابد من التأكد من إمكانية الربط مع منصة اكس بشكل مباشر أفضل من استخدام طرف ثالث
[c]التسجيل بالبريد الإلكتروني أفضل لأنه لايوجد ربط مع نفاذ أو غيره
[d]ولضمان تجربة عميل سلسة خصوصا للزوار
