<template>
    <div class="flex flex-col gap-4">
        <!-- Page Header -->
        <div class="flex flex-row items-start justify-between flex-wrap gap-3 p-4">
            <div class="min-w-[288px]">
                <h1 class="text-[32px] font-bold text-gray-900">News</h1>
            </div>
            <Link :href="route('hackathon-admin.news.index')"
                  class="rounded-xl bg-gray-100 hover:bg-gray-200 transition-colors h-8 flex items-center justify-center px-4 min-w-[84px] text-sm font-medium text-gray-700">
                Back to List
            </Link>
        </div>

        <!-- Tabs Navigation -->
        <div class="flex flex-col">
            <div class="border-b border-gray-200 flex flex-row items-start justify-start px-4 gap-8">
                <button class="border-b-[3px] border-emerald-500 text-gray-900 flex flex-col items-center justify-center pt-4 pb-[13px] transition-colors">
                    <span class="text-sm font-bold">Add News</span>
                </button>
                <Link :href="route('hackathon-admin.news.index')"
                      class="border-b-[3px] border-transparent text-gray-500 hover:text-gray-700 flex flex-col items-center justify-center pt-4 pb-[13px] transition-colors">
                    <span class="text-sm font-bold">All News</span>
                </Link>
                <button class="border-b-[3px] border-transparent text-gray-500 hover:text-gray-700 flex flex-col items-center justify-center pt-4 pb-[13px] transition-colors">
                    <span class="text-sm font-bold">Media Center</span>
                </button>
            </div>
        </div>

        <!-- Add News Form -->
        <form @submit.prevent="submit" class="px-4 pb-8">
            <h2 class="text-xl font-semibold text-gray-900 mb-6">Add News</h2>

            <div class="space-y-6">
                <!-- News Title and Categories Row -->
                <div class="flex gap-4">
                    <!-- News Title -->
                    <div class="flex-1">
                        <label for="title" class="block text-sm font-medium text-gray-700 mb-2">News Title</label>
                        <input v-model="form.title"
                               type="text"
                               id="title"
                               placeholder="Enter news title"
                               class="w-full px-4 py-2 rounded-xl border border-gray-300 bg-emerald-50 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-transparent">
                        <div v-if="form.errors.title" class="text-red-500 text-sm mt-1">{{ form.errors.title }}</div>
                    </div>

                    <!-- Categories -->
                    <div class="w-64">
                        <label for="category" class="block text-sm font-medium text-gray-700 mb-2">
                            Categories
                            <button type="button" @click="showAddCategory = true"
                                    class="ml-2 text-emerald-600 hover:text-emerald-700 text-xs">
                                + Add New Category
                            </button>
                        </label>
                        <select v-model="form.category_id"
                                id="category"
                                class="w-full px-4 py-2 rounded-xl border border-gray-300 bg-emerald-50 focus:outline-none focus:ring-2 focus:ring-emerald-500">
                            <option value="">Select</option>
                            <option v-for="category in categories" :key="category.id" :value="category.id">
                                {{ category.name }}
                            </option>
                        </select>
                    </div>
                </div>

                <!-- News Body -->
                <div>
                    <label for="content" class="block text-sm font-medium text-gray-700 mb-2">News Body</label>
                    <div class="rounded-xl border border-gray-300 bg-white overflow-hidden">
                        <!-- Editor Toolbar -->
                        <div class="border-b border-gray-200 bg-gray-50 px-3 py-2 flex items-center gap-2">
                            <button type="button" @click="formatText('bold')"
                                    class="p-1.5 rounded hover:bg-gray-200 transition-colors">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z"/>
                                </svg>
                            </button>
                            <button type="button" @click="formatText('italic')"
                                    class="p-1.5 rounded hover:bg-gray-200 transition-colors">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z"/>
                                </svg>
                            </button>
                            <button type="button" @click="formatText('underline')"
                                    class="p-1.5 rounded hover:bg-gray-200 transition-colors">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z"/>
                                </svg>
                            </button>
                            <div class="w-px h-6 bg-gray-300 mx-1"></div>
                            <button type="button" @click="formatText('alignLeft')"
                                    class="p-1.5 rounded hover:bg-gray-200 transition-colors">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z"/>
                                </svg>
                            </button>
                            <button type="button" @click="formatText('alignCenter')"
                                    class="p-1.5 rounded hover:bg-gray-200 transition-colors">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z"/>
                                </svg>
                            </button>
                            <button type="button" @click="formatText('alignRight')"
                                    class="p-1.5 rounded hover:bg-gray-200 transition-colors">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z"/>
                                </svg>
                            </button>
                            <div class="w-px h-6 bg-gray-300 mx-1"></div>
                            <button type="button" @click="formatText('list')"
                                    class="p-1.5 rounded hover:bg-gray-200 transition-colors">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z"/>
                                </svg>
                            </button>
                            <button type="button" @click="formatText('link')"
                                    class="p-1.5 rounded hover:bg-gray-200 transition-colors">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"/>
                                </svg>
                            </button>
                            <button type="button" @click="formatText('image')"
                                    class="p-1.5 rounded hover:bg-gray-200 transition-colors">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"/>
                                </svg>
                            </button>
                        </div>
                        <!-- Editor Content -->
                        <textarea v-model="form.content"
                                  id="content"
                                  rows="10"
                                  class="w-full p-4 focus:outline-none resize-none"
                                  placeholder="Write your news content here..."></textarea>
                    </div>
                    <div v-if="form.errors.content" class="text-red-500 text-sm mt-1">{{ form.errors.content }}</div>
                </div>

                <!-- Main Image and Video Embedding -->
                <div class="grid grid-cols-2 gap-6">
                    <!-- Main Image -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Main Image</label>
                        <div class="border-2 border-dashed border-gray-300 rounded-xl p-6 text-center bg-gray-50 hover:bg-gray-100 transition-colors">
                            <input type="file"
                                   @change="handleImageUpload"
                                   accept="image/*"
                                   class="hidden"
                                   id="main-image">
                            <label for="main-image" class="cursor-pointer">
                                <svg class="mx-auto h-12 w-12 text-gray-400 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                                </svg>
                                <p class="text-sm text-gray-600">Upload Image</p>
                                <p class="text-xs text-gray-500 mt-1">Drag and drop or click to upload</p>
                            </label>
                            <div v-if="imagePreview" class="mt-4">
                                <img :src="imagePreview" alt="Preview" class="max-h-32 mx-auto rounded">
                            </div>
                        </div>
                    </div>

                    <!-- Video Embedding -->
                    <div>
                        <label for="video_url" class="block text-sm font-medium text-gray-700 mb-2">Video Embedding</label>
                        <div class="space-y-2">
                            <label class="text-xs text-gray-600">Video URL</label>
                            <input v-model="form.video_url"
                                   type="url"
                                   id="video_url"
                                   placeholder="Enter video URL"
                                   class="w-full px-4 py-2 rounded-xl border border-gray-300 bg-white focus:outline-none focus:ring-2 focus:ring-emerald-500">
                        </div>
                    </div>
                </div>

                <!-- Twitter Message and Publishing -->
                <div class="grid grid-cols-2 gap-6">
                    <!-- Twitter Message -->
                    <div>
                        <label for="twitter_message" class="block text-sm font-medium text-gray-700 mb-2">Twitter Message</label>
                        <textarea v-model="form.twitter_message"
                                  id="twitter_message"
                                  rows="4"
                                  maxlength="280"
                                  class="w-full px-4 py-2 rounded-xl border border-gray-300 bg-white focus:outline-none focus:ring-2 focus:ring-emerald-500 resize-none"
                                  placeholder="Enter your Twitter message..."></textarea>
                        <p class="text-xs text-gray-500 mt-1">{{ form.twitter_message?.length || 0 }}/280 characters</p>
                    </div>

                    <!-- Twitter Publishing -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Twitter Publishing</label>
                        <div class="bg-gray-50 rounded-xl p-4">
                            <div class="flex items-center justify-between">
                                <span class="text-sm text-gray-700">Publish to Twitter</span>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input v-model="form.publish_to_twitter"
                                           type="checkbox"
                                           class="sr-only peer">
                                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-emerald-300 rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-emerald-600"></div>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Image Gallery -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Image Gallery</label>
                    <div class="border-2 border-dashed border-gray-300 rounded-xl p-6 bg-gray-50">
                        <div class="text-center">
                            <input type="file"
                                   @change="handleGalleryUpload"
                                   accept="image/*"
                                   multiple
                                   class="hidden"
                                   id="gallery-images">
                            <label for="gallery-images" class="cursor-pointer">
                                <svg class="mx-auto h-12 w-12 text-gray-400 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                                <p class="text-sm text-gray-600">Upload Images</p>
                                <p class="text-xs text-gray-500 mt-1">Drag and drop or click to upload</p>
                            </label>
                        </div>
                        <div v-if="galleryPreviews.length > 0" class="mt-4 grid grid-cols-4 gap-2">
                            <div v-for="(preview, index) in galleryPreviews" :key="index" class="relative">
                                <img :src="preview" alt="Gallery" class="w-full h-24 object-cover rounded">
                                <button type="button" @click="removeGalleryImage(index)"
                                        class="absolute top-1 right-1 bg-red-500 text-white rounded-full p-1">
                                    <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                                    </svg>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- SEO Keywords -->
                <div>
                    <label for="keywords" class="block text-sm font-medium text-gray-700 mb-2">SEO Keywords</label>
                    <input v-model="form.keywords"
                           type="text"
                           id="keywords"
                           placeholder="Enter SEO keywords"
                           class="w-full px-4 py-2 rounded-xl border border-gray-300 bg-white focus:outline-none focus:ring-2 focus:ring-emerald-500">
                    <p class="text-xs text-gray-500 mt-1">Separate keywords with commas</p>
                </div>

                <!-- Publish Button -->
                <div class="flex justify-center pt-4">
                    <button type="submit"
                            :disabled="form.processing"
                            class="w-full max-w-md py-3 px-6 rounded-xl bg-emerald-600 hover:bg-emerald-700 text-white font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed">
                        {{ form.processing ? 'Publishing...' : 'Publish' }}
                    </button>
                </div>
            </div>
        </form>
    </div>
</template>

<script setup>
import { Link, useForm } from '@inertiajs/vue3'
import { ref } from 'vue'

const props = defineProps({
    categories: {
        type: Array,
        default: () => []
    }
})

const form = useForm({
    title: '',
    content: '',
    category_id: '',
    video_url: '',
    twitter_message: '',
    publish_to_twitter: false,
    keywords: '',
    main_image: null,
    gallery_images: []
})

const imagePreview = ref(null)
const galleryPreviews = ref([])
const showAddCategory = ref(false)

const handleImageUpload = (event) => {
    const file = event.target.files[0]
    if (file) {
        form.main_image = file
        const reader = new FileReader()
        reader.onload = (e) => {
            imagePreview.value = e.target.result
        }
        reader.readAsDataURL(file)
    }
}

const handleGalleryUpload = (event) => {
    const files = Array.from(event.target.files)
    files.forEach(file => {
        form.gallery_images.push(file)
        const reader = new FileReader()
        reader.onload = (e) => {
            galleryPreviews.value.push(e.target.result)
        }
        reader.readAsDataURL(file)
    })
}

const removeGalleryImage = (index) => {
    form.gallery_images.splice(index, 1)
    galleryPreviews.value.splice(index, 1)
}

const formatText = (command) => {
    // This would integrate with a rich text editor
    console.log('Format:', command)
}

const submit = () => {
    form.post(route('hackathon-admin.news.store'), {
        preserveScroll: true,
        onSuccess: () => {
            // Handle success
        }
    })
}
</script>
